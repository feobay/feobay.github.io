(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{274:function(t,v,_){t.exports=_.p+"assets/img/image-20231031094150876.b112c480.png"},296:function(t,v,_){"use strict";_.r(v);var a=_(14),r=Object(a.a)({},(function(){var t=this,v=t._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h1",{attrs:{id:"计算机网络"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#计算机网络"}},[t._v("#")]),t._v(" 计算机网络")]),t._v(" "),v("h2",{attrs:{id:"常见面试题"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#常见面试题"}},[t._v("#")]),t._v(" 常见面试题")]),t._v(" "),v("h3",{attrs:{id:"http-1-1如何优化"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#http-1-1如何优化"}},[t._v("#")]),t._v(" HTTP/1.1如何优化")]),t._v(" "),v("p",[t._v("见 "),v("a",{attrs:{href:"https://xiaolincoding.com/network/2_http/http_optimize.html#%E6%80%BB%E7%BB%93",target:"_blank",rel:"noopener noreferrer"}},[t._v("小林coding"),v("OutboundLink")],1)]),t._v(" "),v("p",[t._v("三个方向进行优化")]),t._v(" "),v("ul",[v("li",[t._v("避免发送请求：使用缓存（etag，及modified时间）")]),t._v(" "),v("li",[t._v("减少发送请求\n"),v("ul",[v("li",[t._v("减少重定向：重定向工作交给代理服务器完成，减少发送请求的次数")]),t._v(" "),v("li",[t._v("合并请求：将多个请求小文件的请求合并成一个请求，减少了重复发送的请求头")]),t._v(" "),v("li",[t._v("延迟发送请求")])])]),t._v(" "),v("li",[t._v("缩小发送报文长度\n"),v("ul",[v("li",[t._v("无损压缩")]),t._v(" "),v("li",[t._v("有损压缩")])])])]),t._v(" "),v("p",[v("strong",[t._v("总结：")])]),t._v(" "),v("p",[t._v("主要从 3 个方面优化 HTTP/1.1 协议。")]),t._v(" "),v("p",[t._v("第一个思路是，通过缓存技术来避免发送 HTTP 请求。客户端收到第一个请求的响应后，可以将其缓存在本地磁盘，下次请求的时候，如果缓存没过期，就直接读取本地缓存的响应数据。如果缓存过期，客户端发送请求的时候带上响应数据的摘要，服务器比对后发现资源没有变化，就发出不带包体的 304 响应，告诉客户端缓存的响应仍然有效。")]),t._v(" "),v("p",[t._v("第二个思路是，减少 HTTP 请求的次数，有以下的方法：")]),t._v(" "),v("ol",[v("li",[t._v("将原本由客户端处理的重定向请求，交给代理服务器处理，这样可以减少重定向请求的次数；")]),t._v(" "),v("li",[t._v("将多个小资源合并成一个大资源再传输，能够减少 HTTP 请求次数以及 头部的重复传输，再来减少 TCP 连接数量，进而省去 TCP 握手和慢启动的网络消耗；")]),t._v(" "),v("li",[t._v("按需访问资源，只访问当前用户看得到/用得到的资源，当客户往下滑动，再访问接下来的资源，以此达到延迟请求，也就减少了同一时间的 HTTP 请求次数。")])]),t._v(" "),v("p",[t._v("第三思路是，通过压缩响应资源，降低传输资源的大小，从而提高传输效率，所以应当选择更优秀的压缩算法。")]),t._v(" "),v("p",[t._v("不管怎么优化 HTTP/1.1 协议都是有限的，不然也不会出现 HTTP/2 和 HTTP/3 协议。")]),t._v(" "),v("h3",{attrs:{id:"https-rsa握手解析"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#https-rsa握手解析"}},[t._v("#")]),t._v(" HTTPS RSA握手解析")]),t._v(" "),v("p",[t._v("SSL/TLS 协议基本流程：")]),t._v(" "),v("ul",[v("li",[t._v("客户端向服务器索要并验证服务器的公钥。")]),t._v(" "),v("li",[t._v("双方协商生产「会话秘钥」。")]),t._v(" "),v("li",[t._v("双方采用「会话秘钥」进行加密通信。")])]),t._v(" "),v("p",[t._v("前两步也就是 SSL/TLS 的建立过程，也就是握手阶段。")]),t._v(" "),v("h3",{attrs:{id:"rsa的原理"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#rsa的原理"}},[t._v("#")]),t._v(" RSA的原理")]),t._v(" "),v("h3",{attrs:{id:"igmp总结"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#igmp总结"}},[t._v("#")]),t._v(" IGMP总结")]),t._v(" "),v("p",[t._v("IGMP全称Internet Group Management Protocol，中文为网络组管理报文。是用于管理组播成员的协议。它有v1、v2、v3三个版本。")]),t._v(" "),v("ul",[v("li",[t._v("v1版本："),v("strong",[t._v("普遍组查询报文")]),t._v("（发224.0.0.1来查询在网络中有哪些组播组）、"),v("strong",[t._v("成员报告报文")]),t._v("。没有离开信息，路由器感知不到成员离开，只有在查询报文发出后130s内未收到成员报告报文则会删除该组播组，在这130s内路由器仍会转发发往该组播组的数据造成流量浪费。")]),t._v(" "),v("li",[t._v("v2版本：加入了"),v("strong",[t._v("离开组报文")]),t._v("，同时查询报文进一步划分为"),v("strong",[t._v("特定组查询")]),t._v("和普遍组查询。离开组报文是由该组的最后一个成员发送给224.0.0.2(代表网络中所有组播路由器)，内容是该组播地址，IGMP 路由器收到后会发送一个特定组查询报文来询问网络中是否还有该组播地址，如果没有回应就会把这个组从IGMP table中删除")]),t._v(" "),v("li",[t._v("v3版本：新加入 "),v("strong",[t._v("Group-and-Source-Specific Query")]),t._v(",该类型为IGMPv3中新增加的，用于查询接口下是否有成员需要接收指定源列表中的源所发出的特定组的多播流。 也就是说，相比于v1/v2，v3的组播成员可以指定多播源来接收其数据，而不用全部接收来自多播组的流量，这一做法在多个多播源公用一个多播组的情况下可以极大节省资源。")])]),t._v(" "),v("h3",{attrs:{id:"路由算法与路由协议"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#路由算法与路由协议"}},[t._v("#")]),t._v(" 路由算法与路由协议")]),t._v(" "),v("p",[t._v("核心：每个路由器中都有一个路由表，其表项如下：")]),t._v(" "),v("blockquote",[v("p",[t._v("目的网络IP地址、子网掩码、下一跳IP地址、接口")])]),t._v(" "),v("p",[v("img",{attrs:{src:_(274),alt:"image-20231031094150876"}})]),t._v(" "),v("p",[v("strong",[t._v("路由算法分类")]),t._v("：静态路由算法（非自适应路由算法）、动态路由算法（自适应路由算法）")]),t._v(" "),v("p",[v("img",{attrs:{src:"https://feobay.oss-cn-shanghai.aliyuncs.com/img/image-20231031094553515.png",alt:"image-20231031094553515"}})])])}),[],!1,null,null,null);v.default=r.exports}}]);