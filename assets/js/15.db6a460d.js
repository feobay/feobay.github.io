(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{287:function(t,s,a){"use strict";a.r(s);var e=a(14),r=Object(e.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"stl源码剖析-侯捷"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#stl源码剖析-侯捷"}},[t._v("#")]),t._v(" STL源码剖析（侯捷）")]),t._v(" "),s("p",[t._v("本文件为个人学习C++STL的笔记（仅限C++11）")]),t._v(" "),s("h2",{attrs:{id:"_1-认识headers、版本及学习c-重要资源"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-认识headers、版本及学习c-重要资源"}},[t._v("#")]),t._v(" 1.认识headers、版本及学习C++重要资源")]),t._v(" "),s("p",[t._v("STL = Standard Template Library (标准模板库)")]),t._v(" "),s("p",[t._v("C++参考网站推荐 https://zh.cppreference.com/")]),t._v(" "),s("p",[t._v("学习C++STL源码"),s("strong",[t._v("所需要知识")])]),t._v(" "),s("ul",[s("li",[t._v("C++基本语法（正确使用模板，templates)")])]),t._v(" "),s("p",[s("strong",[t._v("学习目标")])]),t._v(" "),s("ul",[s("li",[t._v("lv0: 了解C++标准库的用法及复杂度")]),t._v(" "),s("li",[t._v("lv1：熟悉C++标准库实现结构，做到胸中有丘壑")]),t._v(" "),s("li",[t._v("lv2：良好使用C++标准库")]),t._v(" "),s("li",[t._v("lv3：扩充C++标准库")])]),t._v(" "),s("h3",{attrs:{id:"headers"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#headers"}},[t._v("#")]),t._v(" headers")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("STL以header files的形式被引入，并且不带.h，例如 "),s("code",[t._v("#include<vector>")])])]),t._v(" "),s("li",[s("p",[t._v("新式C header files 也可以不带 .h，例如 "),s("code",[t._v("#include <cstdio>")])])]),t._v(" "),s("li",[s("p",[t._v("旧式C header files 也可以使用，例如 "),s("code",[t._v("#include <stdio.h>")])])]),t._v(" "),s("li",[s("p",[t._v("命名空间")]),t._v(" "),s("ul",[s("li",[s("p",[s("code",[t._v("using namespace std;")]),t._v(" or "),s("code",[t._v("using std::cout;")])])]),t._v(" "),s("li",[s("p",[t._v("亦可自命名如下：")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 在主函数外自命名一个命名空间")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" jj01 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bool")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("strLonger")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" string"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" s1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" string"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" s2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" s1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("size")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" s2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("size")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" argc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" argv"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n   cout "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" jj01"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("strLonger")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello2"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" endl"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])])]),t._v(" "),s("li",[s("p",[t._v("旧式C header files 不封装于 namespace std")])])]),t._v(" "),s("h2",{attrs:{id:"_2-c-stl体系结构基础"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-c-stl体系结构基础"}},[t._v("#")]),t._v(" 2.C++STL体系结构基础")]),t._v(" "),s("p",[t._v("Standard Template Library")]),t._v(" "),s("h3",{attrs:{id:"六大部件-components"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#六大部件-components"}},[t._v("#")]),t._v(" "),s("strong",[t._v("六大部件（Components）：")])]),t._v(" "),s("ul",[s("li",[t._v("容器（Containers)")]),t._v(" "),s("li",[t._v("分配器（Allocators）")]),t._v(" "),s("li",[t._v("算法（Algorithms）")]),t._v(" "),s("li",[t._v("适配器（Adapters）")]),t._v(" "),s("li",[t._v("迭代器（Iterators）")]),t._v(" "),s("li",[t._v("仿函数（Functors)")])]),t._v(" "),s("p",[s("strong",[t._v("它们的关系图如下：")])]),t._v(" "),s("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://feobay.oss-cn-shanghai.aliyuncs.com/img/image-20220701092028919.png",alt:"image-20220701092028919"}}),t._v(" "),s("p",[s("strong",[t._v("下面是一段使用了六大类型STL的程序：")])]),t._v(" "),s("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://feobay.oss-cn-shanghai.aliyuncs.com/img/image-20220701093219162.png",alt:"image-20220701093219162"}}),t._v(" "),s("p",[t._v("各个函数解释如下：")]),t._v(" "),s("p",[s("strong",[t._v("1. count_if")]),t._v(" : 返回在 "),s("code",[t._v("[first, last)")]),t._v(" 范围内满足特定条件的元素的数目。")]),t._v(" "),s("p",[s("strong",[t._v("2. not1")]),t._v(": "),s("code",[t._v("std::not1")]),t._v(" 和 "),s("code",[t._v("std::not2")]),t._v(" 是用来把符合某种特殊条件的『函数对象』转换为反义「函数对象」的函数。")]),t._v(" "),s("p",[t._v("具体的：")]),t._v(" "),s("p",[t._v("not1是构造一个与谓词结果相反的一元函数对象。\nnot2是构造一个与谓词结果相反的二元函数对象。")]),t._v(" "),s("p",[s("strong",[t._v("3. bind2nd")]),t._v(": "),s("code",[t._v("bind1st")]),t._v("和 "),s("code",[t._v("bind2nd")]),t._v(" 是将二元函数转换为一元函数，比如一个比较大小的函数是二元函数，当在某些情况下我们想要固定第一个参数（"),s("code",[t._v("bind1st")]),t._v("）或者第二个参数（"),s("code",[t._v("bind2nd")]),t._v("）时，就成了一元函数.在此处是将仿函数 "),s("code",[t._v("less<int>()")]),t._v(" 的第二个参数绑定为40.")]),t._v(" "),s("p",[s("strong",[t._v("4. less<int>()")]),t._v(": "),s("code",[t._v("less<datatype>(dataType x, dataType y)")]),t._v(", 其返回值为 谓词 "),s("code",[t._v("x < y")]),t._v(" 的 "),s("code",[t._v("bool")]),t._v(" 类型结果。（"),s("code",[t._v("greater<int>()")]),t._v("同理），关于less对象源码和bind2nd源码，可参考博客 "),s("a",{attrs:{href:"https://blog.csdn.net/u012936940/article/details/81192956",target:"_blank",rel:"noopener noreferrer"}},[t._v("C++ bind2nd用法"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("所以 "),s("code",[t._v("count_if(vi.begin(), vi.end(), not1(bind2nd(less<int>(), 40) ) )")]),t._v("是指：")]),t._v(" "),s("blockquote",[s("p",[t._v("返回vi容器中在区间 [vi.begin(), vi.end()) 中不小于40的元素的个数")])]),t._v(" "),s("p",[t._v("运行结果：")]),t._v(" "),s("blockquote",[s("p",[t._v("4")])]),t._v(" "),s("h3",{attrs:{id:"一些容器中相关的关键字"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一些容器中相关的关键字"}},[t._v("#")]),t._v(" 一些容器中相关的关键字")]),t._v(" "),s("p",[s("strong",[t._v("关于iterator")])]),t._v(" "),s("p",[t._v("我们可以将迭代器（iterator）理解为泛化指针，指针能做的，它也可以做，比如重载了 "),s("code",[t._v("*")]),t._v(" 号")]),t._v(" "),s("p",[s("strong",[t._v("since C++11的for range遍历语法(range based for statement)")])]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("declaration "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" collection"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    statement\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("13")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("17")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("19")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    std"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("cout "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" std"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("endl"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\nstd"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("vector"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" vec"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("auto")]),t._v(" elem "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" vec"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    std"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("cout "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" elem "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" std"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("endl"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("auto")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" elem "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" vec"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    elem "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[s("strong",[t._v("关于auto")])]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[t._v("list"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("string"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" c"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\nlist"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("string"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("iterator ite"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nite "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("find")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("c"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("begin")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" c"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("end")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" target"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("现在可以直接使用auto自动类型推断 ↓")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[t._v("list"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("string"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" c"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("auto")]),t._v(" ite "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("find")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("c"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("begin")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" c"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("end")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" target"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h2",{attrs:{id:"_3-容器之分类与各种测试"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-容器之分类与各种测试"}},[t._v("#")]),t._v(" 3. 容器之分类与各种测试")]),t._v(" "),s("h3",{attrs:{id:"容器在内存中的结构概览"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#容器在内存中的结构概览"}},[t._v("#")]),t._v(" 容器在内存中的结构概览")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://feobay.oss-cn-shanghai.aliyuncs.com/img/image-20220701103515425.png",alt:"image-20220701103515425"}})]),t._v(" "),s("p",[t._v("红框中为C++11标准出现")]),t._v(" "),s("p",[s("strong",[t._v("顺序容器(Sequence Containers):")])]),t._v(" "),s("p",[s("strong",[t._v("Array")]),t._v(" : 是封闭的数组，不可扩展（将数组包装成一个类）")]),t._v(" "),s("p",[s("strong",[t._v("Vector")]),t._v(" : 是半开放的动态数组，可以扩展，空间不够则自动x2，自动扩充由分配器来做.")]),t._v(" "),s("p",[s("strong",[t._v("Deque")]),t._v(" : 双端队列，后续解释如何实现")]),t._v(" "),s("p",[s("strong",[t._v("List")]),t._v("  : 双向链表（双向环状链表）")]),t._v(" "),s("p",[s("strong",[t._v("Forward-List")]),t._v(" ：单向链表")]),t._v(" "),s("p",[s("strong",[t._v("关联容器(Associated Containers):")])]),t._v(" "),s("p",[s("strong",[t._v("Set/Multiset:")]),t._v(" 红黑树，高度平衡二叉搜索树；Set中元素不可重复，Multiset可以。")]),t._v(" "),s("p",[s("strong",[t._v("Map/Multimap:")]),t._v(" 也是红黑树，但每个节点分为key-value；同理，Map的key不可重复，Multimap的key可以重复。")]),t._v(" "),s("p",[s("strong",[t._v("无序容器（Unordered Conatiners）：")])]),t._v(" "),s("p",[s("strong",[t._v("Unordered Set/Multiset")]),t._v(" : 底层是用拉链法解决碰撞的哈希表实现(HashTable Separate Chaining)")]),t._v(" "),s("p",[s("strong",[t._v("Unordered Map/Multimap")]),t._v(" : 也是用拉链法。")]),t._v(" "),s("p",[t._v("它们的主要功能与普通的Set/Map类似，且查找效率更高为"),s("code",[t._v("O(1)")]),t._v("；不同的是它们"),s("strong",[t._v("不可排序")]),t._v("。")]),t._v(" "),s("h3",{attrs:{id:"各个容器的方法及效率总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#各个容器的方法及效率总结"}},[t._v("#")]),t._v(" 各个容器的方法及效率总结")]),t._v(" "),s("p",[s("code",[t._v("std::find(c.begin(), c.end(), target)")]),t._v(" 为顺序查找。")]),t._v(" "),s("p",[t._v("std::bsearch() 为二分查找（前提是原容器需要有序）")]),t._v(" "),s("p",[s("strong",[t._v("需要注意各个容器迭代器失效的情况")])]),t._v(" "),s("h4",{attrs:{id:"array"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#array"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://cplusplus.com/reference/array/array/",target:"_blank",rel:"noopener noreferrer"}},[s("strong",[t._v("array")]),s("OutboundLink")],1)]),t._v(" "),s("p",[s("code",[t._v("template < class T, size_t N > class array;")]),t._v(" T为类型，N为大小")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("方法")]),t._v(" "),s("th",[t._v("作用")]),t._v(" "),s("th",[t._v("复杂度")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("size()")]),t._v(" "),s("td",[t._v("返回元素个数")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("front()")]),t._v(" "),s("td",[t._v("返回第一个元素")]),t._v(" "),s("td",[t._v("O(1)")])]),t._v(" "),s("tr",[s("td",[t._v("back()")]),t._v(" "),s("td",[t._v("返回最后一个元素")]),t._v(" "),s("td",[t._v("O(1)")])]),t._v(" "),s("tr",[s("td",[t._v("data()")]),t._v(" "),s("td",[t._v("返回指向作为元素存储工作的底层数组的指针")]),t._v(" "),s("td",[t._v("O(1)")])]),t._v(" "),s("tr",[s("td",[t._v("fill(T val)")]),t._v(" "),s("td",[t._v("将所有元素的值都设为val")]),t._v(" "),s("td",[t._v("O(n)")])])])]),t._v(" "),s("h4",{attrs:{id:"vector"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vector"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://cplusplus.com/reference/vector/vector/",target:"_blank",rel:"noopener noreferrer"}},[s("strong",[t._v("vector")]),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("也可以参考 "),s("a",{attrs:{href:"https://zh.cppreference.com/w/cpp/container/vector",target:"_blank",rel:"noopener noreferrer"}},[t._v("vector"),s("OutboundLink")],1),t._v("，需要注意指针失效的情况")]),t._v(" "),s("p",[s("code",[t._v("template < class T, class Alloc = allocator<T> > class vector; // generic template")])]),t._v(" "),s("p",[t._v("注意，如果内存重新分配，那么原来的指针将失效。")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("方法")]),t._v(" "),s("th",[t._v("作用")]),t._v(" "),s("th",[t._v("复杂度")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("size()")]),t._v(" "),s("td",[t._v("返回元素个数")]),t._v(" "),s("td",[t._v("O(1)")])]),t._v(" "),s("tr",[s("td",[t._v("capacity()")]),t._v(" "),s("td",[t._v("返回容器容量（已申请的空间）")]),t._v(" "),s("td",[t._v("O(1)")])]),t._v(" "),s("tr",[s("td",[t._v("empty()")]),t._v(" "),s("td",[t._v("返回容器是否为空（空返回true，非空返回false）")]),t._v(" "),s("td",[t._v("O(1)")])]),t._v(" "),s("tr",[s("td",[t._v("shrink_to_fit()")]),t._v(" "),s("td",[t._v("使容器空间收缩为元素所占空间大小（需要一个个遍历释放空间）")]),t._v(" "),s("td",[t._v("O(n)")])]),t._v(" "),s("tr",[s("td",[t._v("swap(vector& other)")]),t._v(" "),s("td",[t._v("将内容与 "),s("code",[t._v("other")]),t._v(" 的交换。不在单独的元素上调用任何移动、复制或交换操作。所有迭代器和引用保持合法。尾后迭代器被非法化。")]),t._v(" "),s("td",[t._v("O(1)")])]),t._v(" "),s("tr",[s("td",[t._v("erase()")]),t._v(" "),s("td",[t._v("删除指定元素")]),t._v(" "),s("td",[t._v("O(n)")])]),t._v(" "),s("tr",[s("td",[t._v("insert(iterator pos, const T& val)")]),t._v(" "),s("td",[t._v("有重载，这里说一般用法")]),t._v(" "),s("td",[t._v("O(1)")])]),t._v(" "),s("tr",[s("td",[t._v("push_back(T& val)")]),t._v(" "),s("td",[t._v("将元素添加到容器末尾")]),t._v(" "),s("td",[t._v("O(1)")])]),t._v(" "),s("tr",[s("td",[t._v("emplace_back(T& val)")]),t._v(" "),s("td",[t._v("在容器末尾就地构造元素")]),t._v(" "),s("td",[t._v("O(1)")])])])]),t._v(" "),s("h4",{attrs:{id:"list"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#list"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://zh.cppreference.com/w/cpp/container/list",target:"_blank",rel:"noopener noreferrer"}},[s("strong",[t._v("list")]),s("OutboundLink")],1)]),t._v(" "),s("p",[s("code",[t._v("template < class T, class Alloc = allocator<T> > class list;")])]),t._v(" "),s("p",[t._v("底层是双向链表。")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("方法")]),t._v(" "),s("th",[t._v("作用")]),t._v(" "),s("th",[t._v("复杂度")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("size()")]),t._v(" "),s("td",[t._v("返回存放元素个数")]),t._v(" "),s("td",[t._v("O(1)")])]),t._v(" "),s("tr",[s("td",[t._v("max_size()")]),t._v(" "),s("td",[t._v("返回list能容纳的最大元素数量")]),t._v(" "),s("td",[t._v("O(1)")])]),t._v(" "),s("tr",[s("td",[t._v("pop_front()/pop_back()")]),t._v(" "),s("td",[t._v("移除首/尾元素")]),t._v(" "),s("td",[t._v("O(1)")])]),t._v(" "),s("tr",[s("td",[t._v("push_front()/push_back()")]),t._v(" "),s("td",[t._v("将元素添加到容器起始/尾部")]),t._v(" "),s("td",[t._v("O(1)")])]),t._v(" "),s("tr",[s("td",[t._v("emplace_front()/emplace_back()")]),t._v(" "),s("td",[t._v("在容器起始/末尾就地构造元素")]),t._v(" "),s("td",[t._v("O(1)")])]),t._v(" "),s("tr",[s("td",[t._v("merge()")]),t._v(" "),s("td",[t._v("合并二个已排序列表")]),t._v(" "),s("td",[t._v("O(n)")])]),t._v(" "),s("tr",[s("td",[t._v("unique()")]),t._v(" "),s("td",[t._v("删除连续的重复元素")]),t._v(" "),s("td",[t._v("O(n)")])]),t._v(" "),s("tr",[s("td",[t._v("reverse()")]),t._v(" "),s("td",[t._v("将该链表的所有元素的顺序反转。不非法化任何引用或迭代器。")]),t._v(" "),s("td",[t._v("O(n)")])]),t._v(" "),s("tr",[s("td",[s("a",{attrs:{href:"https://zh.cppreference.com/w/cpp/container/list/splice",target:"_blank",rel:"noopener noreferrer"}},[t._v("splice()"),s("OutboundLink")],1)]),t._v(" "),s("td",[t._v("从另一个"),s("code",[t._v("list")]),t._v("中移动元素")]),t._v(" "),s("td",[t._v("O(n)/O(1)")])])])]),t._v(" "),s("h4",{attrs:{id:"deque"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#deque"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://zh.cppreference.com/w/cpp/container/deque",target:"_blank",rel:"noopener noreferrer"}},[s("strong",[t._v("deque")]),s("OutboundLink")],1)]),t._v(" "),s("p",[s("code",[t._v("template < class T, class Alloc = allocator<T> > class deque;")])]),t._v(" "),s("img",{staticStyle:{zoom:"67%"},attrs:{src:"https://feobay.oss-cn-shanghai.aliyuncs.com/img/image-20220701164210395.png",alt:"image-20220701164210395"}}),t._v(" "),s("p",[t._v("deque在内存空间中实际上是分段的，只是使用时看起来时连续的。")]),t._v(" "),s("p",[t._v("空间利用率高，但查找慢。")]),t._v(" "),s("h4",{attrs:{id:"stack"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#stack"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://zh.cppreference.com/w/cpp/container/stack",target:"_blank",rel:"noopener noreferrer"}},[s("strong",[t._v("stack")]),s("OutboundLink")],1)]),t._v(" "),s("p",[s("code",[t._v("template <class T, class Container = deque<T> > class stack;")])]),t._v(" "),s("p",[s("code",[t._v("stack")]),t._v(" 是用 "),s("code",[t._v("deque")]),t._v(" 封装实现的，所以它属于"),s("strong",[t._v("容器适配器")])]),t._v(" "),s("img",{staticStyle:{zoom:"80%"},attrs:{src:"https://feobay.oss-cn-shanghai.aliyuncs.com/img/image-20220701171941950.png",alt:"image-20220701171941950"}}),t._v(" "),s("h4",{attrs:{id:"queue"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#queue"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://zh.cppreference.com/w/cpp/container/queue",target:"_blank",rel:"noopener noreferrer"}},[s("strong",[t._v("queue")]),s("OutboundLink")],1)]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("template")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("T")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Container")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" std"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("deque"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("T"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("queue")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("img",{staticStyle:{zoom:"67%"},attrs:{src:"https://feobay.oss-cn-shanghai.aliyuncs.com/img/image-20220701172607482.png",alt:"image-20220701172607482"}}),t._v(" "),s("h4",{attrs:{id:"set-multiset"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#set-multiset"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://cplusplus.com/reference/set/",target:"_blank",rel:"noopener noreferrer"}},[t._v("set/multiset"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("关联容器的效率是")]),t._v(" "),s("p",[s("strong",[t._v("set")])]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("template")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("T")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("                        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// set::key_type/value_type")]),t._v("\n           "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Compare")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" less"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("T"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// set::key_compare/value_compare")]),t._v("\n           "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Alloc")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" allocator"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("T"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// set::allocator_type")]),t._v("\n           "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("set")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[s("strong",[t._v("multiset")])]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("template")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("T")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("                        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// multiset::key_type/value_type")]),t._v("\n           "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Compare")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" less"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("T"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// multiset::key_compare/value_compare")]),t._v("\n           "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Alloc")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" allocator"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("T"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// multiset::allocator_type")]),t._v("\n           "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("multiset")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("img",{staticStyle:{zoom:"67%"},attrs:{src:"https://feobay.oss-cn-shanghai.aliyuncs.com/img/image-20220701173516542.png",alt:"image-20220701173516542"}}),t._v(" "),s("h4",{attrs:{id:"map-multimap"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#map-multimap"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://cplusplus.com/reference/map/",target:"_blank",rel:"noopener noreferrer"}},[t._v("map/multimap"),s("OutboundLink")],1)]),t._v(" "),s("p",[s("strong",[t._v("map")])]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("template")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Key")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("                                     "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// map::key_type")]),t._v("\n           "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("T")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("                                       "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// map::mapped_type")]),t._v("\n           "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Compare")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" less"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Key"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("                     "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// map::key_compare")]),t._v("\n           "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Alloc")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" allocator"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("pair"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" Key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("T"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// map::allocator_type")]),t._v("\n           "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("map")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[s("strong",[t._v("multimap")])]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("template")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Key")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("                                     "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// multimap::key_type")]),t._v("\n           "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("T")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("                                       "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// multimap::mapped_type")]),t._v("\n           "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Compare")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" less"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Key"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("                     "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// multimap::key_compare")]),t._v("\n           "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Alloc")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" allocator"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("pair"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" Key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("T"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// multimap::allocator_type")]),t._v("\n           "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("multimap")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("img",{staticStyle:{zoom:"67%"},attrs:{src:"https://feobay.oss-cn-shanghai.aliyuncs.com/img/image-20220701175034270.png",alt:"image-20220701175034270"}}),t._v(" "),s("p",[t._v("底层实现红黑树，查找效率$$O(nlog_2(n))$$")]),t._v(" "),s("h4",{attrs:{id:"unordered-set"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#unordered-set"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://cplusplus.com/reference/unordered_set/",target:"_blank",rel:"noopener noreferrer"}},[t._v("unordered_set"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("底层hash表")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("template")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Key")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("                        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// unordered_set::key_type/value_type")]),t._v("\n           "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Hash")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" hash"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Key"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("           "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// unordered_set::hasher")]),t._v("\n           "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Pred")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" equal_to"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Key"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("       "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// unordered_set::key_equal")]),t._v("\n           "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Alloc")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" allocator"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Key"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// unordered_set::allocator_type")]),t._v("\n           "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("unordered_set")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("测试")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://feobay.oss-cn-shanghai.aliyuncs.com/img/image-20220701180236052.png",alt:"image-20220701180236052"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://feobay.oss-cn-shanghai.aliyuncs.com/img/image-20220701180320868.png",alt:"image-20220701180320868"}})]),t._v(" "),s("h4",{attrs:{id:"unordered-map"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#unordered-map"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://cplusplus.com/reference/unordered_map/",target:"_blank",rel:"noopener noreferrer"}},[t._v("unordered_map"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("底层为hash表")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("template")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Key")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("                                    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// unordered_map::key_type")]),t._v("\n           "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("T")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("                                      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// unordered_map::mapped_type")]),t._v("\n           "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Hash")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" hash"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Key"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("                       "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// unordered_map::hasher")]),t._v("\n           "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Pred")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" equal_to"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Key"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("                   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// unordered_map::key_equal")]),t._v("\n           "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Alloc")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" allocator"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" pair"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" Key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("T"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// unordered_map::allocator_type")]),t._v("\n           "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("unordered_map")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("测试")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://feobay.oss-cn-shanghai.aliyuncs.com/img/image-20220701180341180.png",alt:"image-20220701180341180"}})]),t._v(" "),s("p",[t._v("若扩容也是扩为两倍。")]),t._v(" "),s("h3",{attrs:{id:"分配器测试"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#分配器测试"}},[t._v("#")]),t._v(" 分配器测试")]),t._v(" "),s("h4",{attrs:{id:"allocator"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#allocator"}},[t._v("#")]),t._v(" allocator")]),t._v(" "),s("p",[t._v("分配器用于分配存储空间，此处allocator是用于分配内存空间")]),t._v(" "),s("p",[t._v("e.g.几个默认使用allocator作为分配器的STL库中类的声明")]),t._v(" "),s("p",[s("code",[t._v("vector")]),t._v(" 源码声明")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("template")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typename")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("_Tp")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typename")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("_Alloc")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" std"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("allocator"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("_Tp"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* _Tp为数据类型，_Alloc为分配器类型，执行时确定类型 */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("vector")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("protected")]),t._v(" _Vector_base"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("_Tp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" _Alloc"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),s("p",[s("code",[t._v("list")]),t._v(" 源码声明")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("template")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typename")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("_Tp")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typename")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("_Alloc")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" std"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("allocator"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("_Tp"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("list")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("protected")]),t._v(" _List_base"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("_Tp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" _Alloc"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),s("p",[s("code",[t._v("deque")]),t._v(" 源码声明")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("template")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typename")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("_Tp")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typename")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("_Alloc")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" std"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("allocator"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("_Tp"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("deque")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("protected")]),t._v(" _Deque_base"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("_Tp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" _Alloc"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),s("p",[s("code",[t._v("set")]),t._v(" 源码声明 （后面的关联容器底层使用红黑树，所以需要有less仿函数来比较）")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("template")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typename")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("_Key")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typename")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("_Compare")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" std"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("less"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("_Key"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typename")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("_Alloc")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" std"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("allocator"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("_Key"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("set")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*_Key类型用于查找，后面的_Tp用于存放具体数据，less仿函数用于比较*/")]),t._v("\n")])])]),s("p",[s("code",[t._v("map")]),t._v(" 源码声明")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("template")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typename")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("_Key")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typename")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("_Tp")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typename")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("_Compare")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" std"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("less"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("_Key"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typename")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("_Alloc")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" std"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("allocator"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("_Key"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("map")]),t._v("\n")])])]),s("p",[s("code",[t._v("unordered_set")]),t._v(" 源码声明（后面的无序容器底层使用哈希表实现）")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("template")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("_Value")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\t "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("_Hash")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" hash"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("_Value"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\t "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("_Pred")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" std"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("equal_to"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("_Value"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\t "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("_Alloc")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" std"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("allocator"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("_Value"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("unordered_set")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*_Value用于存放值，_Hash 用于确定哈希函数(根据_Value的值生成哈希值)，_Pred 用于比较值是否相等*/")]),t._v("\n")])])]),s("p",[s("code",[t._v("unordered_map")]),t._v(" 源码声明")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("template")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("_Key")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("_Tp")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\t "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("_Hash")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" hash"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("_Key"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\t "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("_Pred")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" std"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("equal_to"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("_Key"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\t "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("_Alloc")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" std"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("allocator"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("std"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("pair"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" _Key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" _Tp"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("unordered_map")]),t._v("\n")])])]),s("p",[s("img",{attrs:{src:"https://feobay.oss-cn-shanghai.aliyuncs.com/img/image-20220704100836946.png",alt:"image-20220704100836946"}})]),t._v(" "),s("p",[s("strong",[t._v("注意，只有当要申请小块空间时再使用malloc或者free，否则就用已经封装好了的库即可。")])]),t._v(" "),s("p",[s("strong",[t._v("同样，除了上述其情况，一般使用分配器")])]),t._v(" "),s("img",{staticStyle:{zoom:"80%"},attrs:{src:"https://feobay.oss-cn-shanghai.aliyuncs.com/img/image-20220704102236270.png",alt:"image-20220704102236270"}}),t._v(" "),s("h2",{attrs:{id:"_4-c-stl体系结构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-c-stl体系结构"}},[t._v("#")]),t._v(" 4 C++STL体系结构")]),t._v(" "),s("blockquote",[s("p",[t._v("quote: 源码之前，了无秘密。")]),t._v(" "),s("p",[t._v("Algorithms + Data Structures = Programs")]),t._v(" "),s("p",[t._v("数据的属性 + 维护这个属性的操作 = Data Structure")])]),t._v(" "),s("h3",{attrs:{id:"_4-1-c-源码文件布局"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-c-源码文件布局"}},[t._v("#")]),t._v(" 4.1 C++源码文件布局")]),t._v(" "),s("img",{staticStyle:{zoom:"80%"},attrs:{src:"https://feobay.oss-cn-shanghai.aliyuncs.com/img/image-20220704104016918.png",alt:"image-20220704104016918"}}),t._v(" "),s("p",[s("img",{attrs:{src:"https://feobay.oss-cn-shanghai.aliyuncs.com/img/image-20220704104130353.png",alt:"image-20220704104130353"}})]),t._v(" "),s("h3",{attrs:{id:"_4-2-oop-面向对象编程-vs-gp-泛型编程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-oop-面向对象编程-vs-gp-泛型编程"}},[t._v("#")]),t._v(" 4.2 OOP（面向对象编程）vs. GP（泛型编程）")]),t._v(" "),s("p",[s("code",[t._v("OOP = Object-Oriented programming")])]),t._v(" "),s("p",[s("code",[t._v("GP = Generic programming")])]),t._v(" "),s("p",[s("strong",[t._v("OOP与GP的最大区别：")])]),t._v(" "),s("ul",[s("li",[s("p",[s("strong",[t._v("OOP")]),t._v(": 企图将 "),s("strong",[t._v("数据（data）")]),t._v(" 与 "),s("strong",[t._v("操作（methods）")]),t._v(" 联系在一起")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("GP")]),t._v(": 却是将 "),s("strong",[t._v("数据")]),t._v(" 与 "),s("strong",[t._v("操作")]),t._v(" 分开来")])])]),t._v(" "),s("p",[t._v("例子：")]),t._v(" "),s("p",[t._v("容器list不能使用::sort() 排序，所以它有自己的sort()")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://feobay.oss-cn-shanghai.aliyuncs.com/img/image-20220704105842999.png",alt:"image-20220704105842999"}})]),t._v(" "),s("p",[s("strong",[t._v("采用GP的优点：")])]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("Containers")]),t._v(" 和 "),s("strong",[t._v("Algorithms")]),t._v(" 团队可各自闭门造车，其间以 "),s("strong",[t._v("Iterator")]),t._v(" 沟通即可")]),t._v(" "),s("li",[s("strong",[t._v("Algorithms")]),t._v(" 通过 "),s("strong",[t._v("Iterators")]),t._v(" 确定操作范围，并通过 "),s("strong",[t._v("Iterators")]),t._v(" 取用 "),s("strong",[t._v("Container")]),t._v("元素")])]),t._v(" "),s("p",[t._v("以下是例子：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://feobay.oss-cn-shanghai.aliyuncs.com/img/image-20220704105648270.png",alt:"image-20220704105648270"}})]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("template")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("T")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("inline")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" T"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("min")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" T"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" T"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Compare comp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("comp")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" b "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// comp可以作为仿函数，因为Compare重载了操作符括号 ()")]),t._v("\n")])])]),s("p",[s("strong",[t._v("所有algorithms，其内最终设计元素本身的操作，无非就是比大小。")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://feobay.oss-cn-shanghai.aliyuncs.com/img/image-20220704111022146.png",alt:"image-20220704111022146"}})]),t._v(" "),s("h3",{attrs:{id:"_4-3-阅读c-stl的技术基础"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-阅读c-stl的技术基础"}},[t._v("#")]),t._v(" 4.3 阅读C++STL的技术基础")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://zh.cppreference.com/w/cpp/language/operators",target:"_blank",rel:"noopener noreferrer"}},[s("strong",[t._v("操作符重载（Operator Overloading)")]),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("几个限制：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("四个不能重载的操作符")]),t._v(" "),s("ul",[s("li",[s("p",[s("code",[t._v("::")]),t._v(" (scope resolution)")])]),t._v(" "),s("li",[s("p",[s("code",[t._v(".")]),t._v(" (member access)")])]),t._v(" "),s("li",[s("p",[s("code",[t._v(".*")]),t._v(" (member access through pointer to member)")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("?:")]),t._v(" (ternary conditional)")])])])]),t._v(" "),s("li",[s("p",[t._v("不能创造C++未实现的操作符，如 "),s("code",[t._v("**, <>, &|")]),t._v("之类")])]),t._v(" "),s("li",[s("p",[t._v("运算符的优先级、结合方向或操作数的数量不会变化。")])]),t._v(" "),s("li",[s("p",[t._v("重载的运算符 "),s("strong",[t._v("->")]),t._v(" 必须要么返回裸指针，要么（按引用或值）返回同样重载了运算符 "),s("strong",[t._v("->")]),t._v(" 的对象。")])]),t._v(" "),s("li",[s("p",[t._v("运算符 **&&**与 "),s("strong",[t._v("||")]),t._v(" 的重载失去短路求值。")])]),t._v(" "),s("li",[s("p",[t._v("C++17以前，"),s("strong",[t._v("&&")]),t._v("、"),s("strong",[t._v("||")]),t._v(" 和 "),s("strong",[t._v(",")]),t._v("（逗号）在被重载时失去它们特殊的"),s("a",{attrs:{href:"https://zh.cppreference.com/w/cpp/language/eval_order",target:"_blank",rel:"noopener noreferrer"}},[t._v("定序性质"),s("OutboundLink")],1),t._v("，并且即使不使用函数调用记法，也表现为与常规的函数调用相似。")])])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"center"}},[t._v("表达式")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("作为成员函数")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("作为非成员函数")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("示例")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("@a")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("(a).operator@ ( )")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("operator@ (a)")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[s("code",[t._v("!std::cin")]),t._v(" 调用 "),s("code",[t._v("std::cin.operator!()")])])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("a@b")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("(a).operator@ (b)")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("operator@ (a, b)")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[s("code",[t._v("std::cout<< 42")]),t._v(" 调用 "),s("code",[t._v("std::cout.operator<<(42)")])])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("a=b")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("(a).operator= (b)")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("不能是非成员")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("给定 "),s("code",[t._v("std::string s;")]),t._v(" ， "),s("code",[t._v('s = "abc";')]),t._v(" 调用 "),s("code",[t._v('s.operator=("abc")')])])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("a(b...)")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("(a).operator()(b...)")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("不能是非成员")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("给定 "),s("code",[t._v("std::random_device r;")]),t._v(" ， "),s("code",[t._v("auto n = r();")]),t._v(" 调用 "),s("code",[t._v("r.operator()()")])])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("a[b]")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("(a).operator"),s("a",{attrs:{href:"b"}})]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("不能是非成员")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("给定 "),s("code",[t._v("std::map<int, int> m;")]),t._v(" ， "),s("code",[t._v("m[1] = 2;")]),t._v(" 调用 "),s("code",[t._v("m.operator[](1)")])])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("a->")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("(a).operator-> ( )")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("不能是非成员")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("给定 "),s("code",[t._v("auto p = std::make_unique<S>();")]),t._v(" "),s("code",[t._v("p->bar()")]),t._v(" 调用 "),s("code",[t._v("p.operator->()")])])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("a@")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("(a).operator@ (0)")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("operator@ (a, 0)")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("给定 "),s("code",[t._v("std::vector<int>::iterator i = v.begin();")]),t._v(" ， "),s("code",[t._v("i++")]),t._v(" 调用 "),s("code",[t._v("i.operator++(0)")])])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}}),t._v(" "),s("td",{staticStyle:{"text-align":"center"}}),t._v(" "),s("td",{staticStyle:{"text-align":"center"}}),t._v(" "),s("td",{staticStyle:{"text-align":"center"}})])])]),t._v(" "),s("p",[t._v("在这张表中，"),s("strong",[t._v("@")]),t._v(" 是表示所有匹配运算符的占位符："),s("strong",[t._v("@a")]),t._v(" 是所有前缀运算符，"),s("strong",[t._v("a@")]),t._v(" 是除 -> 以外的所有后缀运算符，"),s("strong",[t._v("a@b")]),t._v(" 是除 = 以外的所有其他运算符。")]),t._v(" "),s("p",[t._v("相关链接 "),s("a",{attrs:{href:"http://zh.cppreference.com/w/cpp/numeric/random/random_device",target:"_blank",rel:"noopener noreferrer"}},[t._v("std::random_device"),s("OutboundLink")],1),t._v("，"),s("a",{attrs:{href:"http://zh.cppreference.com/w/cpp/string/basic_string",target:"_blank",rel:"noopener noreferrer"}},[t._v("std::string"),s("OutboundLink")],1),t._v("，"),s("a",{attrs:{href:"http://zh.cppreference.com/w/cpp/container/map",target:"_blank",rel:"noopener noreferrer"}},[t._v("std::map"),s("OutboundLink")],1),t._v("，"),s("a",{attrs:{href:"http://zh.cppreference.com/w/cpp/memory/unique_ptr/make_unique",target:"_blank",rel:"noopener noreferrer"}},[t._v("std::make_unique"),s("OutboundLink")],1),t._v("，"),s("a",{attrs:{href:"http://zh.cppreference.com/w/cpp/io/cin",target:"_blank",rel:"noopener noreferrer"}},[t._v("std::cin"),s("OutboundLink")],1),t._v("，"),s("a",{attrs:{href:"http://zh.cppreference.com/w/cpp/container/vector",target:"_blank",rel:"noopener noreferrer"}},[t._v("std::vector"),s("OutboundLink")],1)]),t._v(" "),s("blockquote",[s("p",[t._v("侯捷老师原话：你记得下来吗？反正我记不下来。当我们需要写的时候再去查找。")])]),t._v(" "),s("p",[s("strong",[t._v("模板（Templates）")])]),t._v(" "),s("p",[t._v("见之前的文档。")]),t._v(" "),s("p",[t._v("迭代器（泛化指针）的例子")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://feobay.oss-cn-shanghai.aliyuncs.com/img/image-20220704152543733.png",alt:"image-20220704152543733"}})]),t._v(" "),s("p",[t._v("模板可以自动推导类型")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://feobay.oss-cn-shanghai.aliyuncs.com/img/image-20220704152628405.png",alt:"image-20220704152628405"}})]),t._v(" "),s("p",[t._v("模板中特别要知道的：")]),t._v(" "),s("p",[s("strong",[t._v("泛化与特化")])]),t._v(" "),s("p",[t._v("特化可以加快运行速度，突出template为空的情况")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://feobay.oss-cn-shanghai.aliyuncs.com/img/image-20220704152949151.png",alt:"image-20220704152949151"}})]),t._v(" "),s("p",[t._v("哈希中的特化")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://feobay.oss-cn-shanghai.aliyuncs.com/img/image-20220704153024826.png",alt:"image-20220704153024826"}})]),t._v(" "),s("p",[t._v("当类型为空时")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://feobay.oss-cn-shanghai.aliyuncs.com/img/image-20220704153315782.png",alt:"image-20220704153315782"}})]),t._v(" "),s("p",[s("strong",[t._v("偏特化")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://feobay.oss-cn-shanghai.aliyuncs.com/img/image-20220704153419907.png",alt:"image-20220704153419907"}})]),t._v(" "),s("h2",{attrs:{id:"_5-c-stl源码剖析"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-c-stl源码剖析"}},[t._v("#")]),t._v(" 5 C++STL源码剖析")]),t._v(" "),s("h3",{attrs:{id:"_5-1-分配器allocators"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-分配器allocators"}},[t._v("#")]),t._v(" 5.1 分配器allocators")]),t._v(" "),s("p",[t._v("==先谈operator new() 和 malloc==")]),t._v(" "),s("p",[t._v("C++一层层调用，最终会回到malloc这个函数，而malloc最终又会根据系统的不同进行底层的系统调用。")]),t._v(" "),s("p",[s("strong",[t._v("malloc")]),t._v("的实现见博客 [【malloc的底层实现及原理】](![img](file:///C:\\Users\\F\\AppData\\Roaming\\Tencent\\QQ\\Temp%W@GJ$ACOF(TYDYECOKVDYB.png)https://www.cnblogs.com/zpcoding/articles/10808969.html)")]),t._v(" "),s("p",[s("strong",[t._v("operator new")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://feobay.oss-cn-shanghai.aliyuncs.com/img/image-20220705091748989.png",alt:"image-20220705091748989"}})]),t._v(" "),s("p",[t._v("旧版的allocator由于封装malloc与free过多层，造成开销过大；所以修改为使用SGI STL新实现的分配器。")]),t._v(" "),s("p",[t._v("Gnu的分配器为了实现节省内存，他需要减少malloc的次数，所以设计了16条链表，每条链表负责不同大小的区块，第0条链表负责的是8字节大小区块，第一条负责16字节大小的区块，以此类推....所以在容器需要内存的时候，内存中元素的大小会被分配器调整到8的倍数，然后再具体确定选择哪一条链表。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://feobay.oss-cn-shanghai.aliyuncs.com/img/image-20220705095346253.png",alt:"image-20220705095346253"}})]),t._v(" "),s("p",[t._v("G4.9版使用的分配器（又换回以前开销大的了）")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://feobay.oss-cn-shanghai.aliyuncs.com/img/image-20220705100624089.png",alt:"image-20220705100624089"}})]),t._v(" "),s("p",[t._v("但G4.9所附带的标准库，有许多extenion allocators，其中__pool_alloc 就是G2.9的alloc，我们仍然可以使用它。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://feobay.oss-cn-shanghai.aliyuncs.com/img/image-20220705101552826.png",alt:"image-20220705101552826"}})]),t._v(" "),s("p",[t._v("在G4.9中，我们像右上角那样设置分配器即可使用这个更优秀的分配器，e.g.")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[t._v("vector"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("string"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" __gun_cxx"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("__pool_alloc"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("string"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" vec"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("亲测，本人用的g++8.1.0中，使用的默认分配器仍然是较差的那个；不过也仍有__pool_alloc这个分配器，用法相同，其在编译器中的路径如下")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://feobay.oss-cn-shanghai.aliyuncs.com/img/image-20220705104514436.png",alt:"image-20220705104514436"}})]),t._v(" "),s("blockquote",[s("p",[t._v("侯捷老师原话：他为什么要换回这个较差的分配器，我没办法给他找理由，他们也没有出来解释说明。")])]),t._v(" "),s("p",[t._v("但是std::allocator从c++20起就正式废除了。")]),t._v(" "),s("h3",{attrs:{id:"_5-2-容器之间的实现关系与分类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-容器之间的实现关系与分类"}},[t._v("#")]),t._v(" 5.2 容器之间的实现关系与分类")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://feobay.oss-cn-shanghai.aliyuncs.com/img/image-20220705105638349.png",alt:"image-20220705105638349"}})]),t._v(" "),s("h3",{attrs:{id:"_5-3-容器list"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-3-容器list"}},[t._v("#")]),t._v(" 5.3 容器list")]),t._v(" "),s("p",[s("strong",[t._v("list容器本身的实现")])]),t._v(" "),s("p",[t._v("这是核心")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://feobay.oss-cn-shanghai.aliyuncs.com/img/image-20220705110828545.png",alt:"image-20220705110828545"}})]),t._v(" "),s("p",[s("strong",[t._v("list的迭代器（iterator）实现")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://feobay.oss-cn-shanghai.aliyuncs.com/img/image-20220705114017882.png",alt:"image-20220705114017882"}})]),t._v(" "),s("p",[t._v("注意前置++与后置++的区别")]),t._v(" "),s("p",[s("strong",[t._v("前置++ (prefix form)")]),t._v("：前置++返回原来对象的引用")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[t._v("self"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("operator")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    node "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("link_type"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("node"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("next"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[s("strong",[t._v("后置++ (post form)")]),t._v(": 后置++返回对象")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[t._v("slef "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("operator")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    self tmp "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" tmp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("后置自增会调用重载的前置自增来实现，其调用过程图解如下：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://feobay.oss-cn-shanghai.aliyuncs.com/img/image-20220705115043373.png",alt:"image-20220705115043373"}})]),t._v(" "),s("p",[t._v("泛化指针在其内部重载操作符++，用于从节点内部跳转到下一个节点而不是单纯自增地址。")]),t._v(" "),s("p",[s("strong",[t._v("list的迭代器中还实现了*和->的重载")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://feobay.oss-cn-shanghai.aliyuncs.com/img/image-20220705142641845.png",alt:"image-20220705142641845"}})]),t._v(" "),s("p",[t._v("下面是一个测试，直接返回一个对象，而函数返回值设置为引用，那么可以得到该对象的引用。")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token macro property"}},[s("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),s("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("<iostream>")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("using")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" std"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CC")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("CC")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("data")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    CC c"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" tmp "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" c"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 此处tmp的类型为整型的引用")]),t._v("\n    cout "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" c"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("data "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" endl"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    tmp "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    cout "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" tmp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n输出结果为\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("\n")])])]),s("p",[s("strong",[t._v("G4.9版本就有了很多改进")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://feobay.oss-cn-shanghai.aliyuncs.com/img/image-20220705145129759.png",alt:"image-20220705145129759"}})]),t._v(" "),s("p",[t._v("G4.9版本的list容器设计如下：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://feobay.oss-cn-shanghai.aliyuncs.com/img/image-20220705151423464.png",alt:"image-20220705151423464"}})]),t._v(" "),s("p",[s("code",[t._v("begin()")]),t._v("指向第一个节点，"),s("code",[t._v("end()")]),t._v("指向最后一个节点的下一块（前闭后开）")]),t._v(" "),s("h3",{attrs:{id:"_5-4-迭代器的设计原则和iterator-traits的作用与设计"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-4-迭代器的设计原则和iterator-traits的作用与设计"}},[t._v("#")]),t._v(" 5.4 迭代器的设计原则和Iterator Traits的作用与设计")]),t._v(" "),s("p",[t._v("iterator本质是个结构体，但是其")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://feobay.oss-cn-shanghai.aliyuncs.com/img/image-20230225230942105.png",alt:"image-20230225230942105"}})]),t._v(" "),s("p",[t._v("Iterator的设计原则：")]),t._v(" "),s("ul",[s("li",[t._v("iterators必须有回答 algorithms 的能力")])]),t._v(" "),s("p",[t._v("目前C++的iterator必须提出五种 associated types")]),t._v(" "),s("ul",[s("li",[t._v("iterator_category")]),t._v(" "),s("li",[t._v("difference_type")]),t._v(" "),s("li",[t._v("value_type")]),t._v(" "),s("li",[t._v("reference")]),t._v(" "),s("li",[t._v("pointer")])]),t._v(" "),s("p",[t._v("如下：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://feobay.oss-cn-shanghai.aliyuncs.com/img/image-20230225233248414.png",alt:"image-20230225233248414"}})])])}),[],!1,null,null,null);s.default=r.exports}}]);